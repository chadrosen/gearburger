#!/usr/bin/env ruby
require 'optparse'
require 'yaml'
require 'erb'

def parse_command_line
  # parse the command line args into a hash of options
  script_name = File.basename($0)
  options = {}
      
  ARGV.options do |o|
    o.banner = "Usage: #{script_name} [options]"
    o.define_head "Controls product generator process." 
           
    options[:run_type] = :all
        
    # TODO: add a -i for info on which workers are running  
    o.on("-l", "--limit limit", Integer, "Max amount of records to load") { |v| options[:limit] = v }
    o.on("-e", "--env RAILS_ENV", String, "Rails environment") {|v| options[:env] = v }
    o.on("-o", "--level level", Integer, "Manually set Log level (1 == debug)") { |v| options[:level] = v}
    o.on("-s", "--start_date start_date", String, "Start Date (yyyy-mm-dd)") { |v| options[:start_date] = v }
    o.on("-z", "--end_date end_date", String, "End Date (yyyy-mm-dd)") { |v| options[:end_date] = v }    
    o.on_tail("-h", "--help", "Show this help message.") { puts o; exit }
    o.parse!
  end
  
  return options  
end

def main
  # process command line args
  options = parse_command_line
  
  # load the rails environment
  env = options[:env]
  ENV['RAILS_ENV'] = env if env
    
  require File.dirname(__FILE__) + '/../config/environment'

  # Get the file that sends notifications to social networks
  require 'social_alerts'  
  p = AlertGenerator::ProductPriceChangeAlert.new(options)
  p.send_alert
end

if $0 == __FILE__
  main
end